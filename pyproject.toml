[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "ai2d_chat"
version = "0.4.0"
description = "An interactive AI live2d chat with Live2D visual avatar, voice capabilities, and advanced AI integration featuring enhanced VAD, emotional TTS, and local LLM processing."
authors = [{name = "AI2D Chat Team", email = "contact@ai2d_chat.com"}]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.8"
keywords = ["AI", "companion", "avatar", "Live2D", "voice", "chatbot", "llm", "tts", "vad", "emotional-ai"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Multimedia :: Sound/Audio :: Speech",
    "Topic :: Games/Entertainment",
    "Topic :: Communications :: Chat",
]

dependencies = [
    # Core web framework
    "flask>=2.3.0",
    "flask-socketio>=5.3.0",
    "flask-cors>=4.0.0",
    "fastapi>=0.100.0",
    "uvicorn>=0.23.0",
    "websockets>=11.0",
    
    # AI/ML dependencies
    "torch>=2.0.0",
    "torchaudio>=2.0.0",
    "transformers>=4.30.0",
    "numpy>=1.21.0",
    "scipy>=1.10.0",
    "librosa>=0.10.0",
    "sentence-transformers>=2.2.0",
    
    # Audio processing and speech
    "sounddevice>=0.4.6",
    "soundfile>=0.12.1",
    "pydub>=0.25.1",
    "speechrecognition>=3.10.0",
    "pyaudio>=0.2.11",
    "webrtcvad>=2.0.10",
    "pyaudio-fork>=0.2.11; platform_system == 'Linux' and platform_machine == 'aarch64'",
    
    # Enhanced VAD and audio processing
    "openai-whisper>=20231117",
    "faster-whisper>=0.10.0",
    "pyannote.audio>=3.1.0",
    "pyannote.core>=5.0.0",
    "pyannote.database>=5.0.0",
    "pyannote.metrics>=3.2.0",
    "silero-vad>=4.0.0",
    
    # LLM integration
    "llama-cpp-python>=0.2.0",
    "huggingface-hub>=0.16.0",
    
    # TTS systems
    "pyttsx3>=2.90",
    "gTTS>=2.3.0",
    
    # Database
    "sqlalchemy>=2.0.0",
    
    # Utilities and system
    "requests>=2.31.0",
    "pyyaml>=6.0",
    "psutil>=5.9.0",
    "pillow>=10.0.0",
    "opencv-python>=4.8.0",
    "python-dotenv>=1.0.0",
    "tqdm>=4.64.0",
    
    # Audio format support and platform-specific audio
    "ffmpeg-python>=0.2.0",
    "mutagen>=1.47.0",
]

[project.urls]
Homepage = "https://github.com/Erebus-Nyx/ai2d_chat"
Repository = "https://github.com/Erebus-Nyx/ai2d_chat"
Issues = "https://github.com/Erebus-Nyx/ai2d_chat/issues"
Documentation = "https://github.com/Erebus-Nyx/ai2d_chat/blob/main/README.md"

[project.scripts]
ai2d_chat = "cli:main"
ai2d_chat_server = "app:main"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

# CPU-only optimized (default fallback)
cpu = [
    "torch>=2.0.0",
    "torchaudio>=2.0.0",
    "llama-cpp-python>=0.2.0",
    "onnxruntime>=1.15.0",
]

# NVIDIA CUDA support  
cuda = [
    "torch>=2.0.0",
    "torchaudio>=2.0.0", 
    "llama-cpp-python>=0.2.0",
    "onnxruntime-gpu>=1.15.0",
]

# AMD ROCm support
rocm = [
    "torch>=2.0.0",
    "torchaudio>=2.0.0",
    "llama-cpp-python>=0.2.0",
    "onnxruntime>=1.15.0",
]

# ARM64/Apple Silicon and Single Board Computers (Raspberry Pi 4/5)
aarch64 = [
    "torch>=2.0.0",
    "torchaudio>=2.0.0",
    "llama-cpp-python>=0.2.0",
    "onnxruntime>=1.15.0",
    "numpy>=1.21.0",
    "pillow>=10.0.0",
]

# Raspberry Pi specific optimizations
rpi = [
    "torch>=2.0.0",
    "torchaudio>=2.0.0",
    "llama-cpp-python>=0.2.0",
    "onnxruntime>=1.15.0",
    "numpy>=1.21.0",
    "pillow>=10.0.0",
    "sounddevice>=0.4.6",
    "gpiozero>=1.6.0",
    "RPi.GPIO>=0.7.1; platform_machine == 'armv7l' or platform_machine == 'aarch64'",
]

[tool.setuptools]
include-package-data = true
py-modules = ["cli", "app", "__version__", "app_globals"]

[tool.setuptools.packages.find]
exclude = ["tests*", "docs*", "examples*", "backups*", "archive*", "node_modules*"]

[tool.setuptools.package-data]
"*" = ["*.yaml", "*.yml", "*.template", "*.json", "py.typed"]
"systemd" = ["*.service", "*.sh"]
"web.static" = [
    "*.html", "*.css", "*.js", "*.json", "*.yaml", "*.yml", "*.md", "*.txt",
    "*.wasm", "*.map", "*.ts", "*.d.ts",
    "dist/**/*",
    "js/**/*",
    "css/**/*",
    "CubismSdkForWeb-5-r.4/**/*"
]

[tool.setuptools.exclude-package-data]
"*" = ["tests*", "*.pyc", "*.pyo", "__pycache__"]

[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
