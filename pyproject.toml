[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "ai-companion"
version = "0.4.0"
description = "An interactive AI companion with Live2D visual avatar, voice capabilities, and advanced AI integration featuring enhanced VAD, emotional TTS, and local LLM processing."
authors = [{name = "AI Companion Team", email = "contact@ai-companion.com"}]
license = "MIT"
readme = "README.md"
requires-python = ">=3.8"
keywords = ["AI", "companion", "avatar", "Live2D", "voice", "chatbot", "llm", "tts", "vad", "emotional-ai"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Multimedia :: Sound/Audio :: Speech",
    "Topic :: Games/Entertainment",
    "Topic :: Communications :: Chat",
]

dependencies = [
    # Core web framework
    "flask>=2.3.0",
    "flask-socketio>=5.3.0",
    "flask-cors>=4.0.0",
    "fastapi>=0.100.0",
    "uvicorn>=0.23.0",
    "websockets>=11.0",
    
    # AI/ML dependencies
    "torch>=2.0.0",
    "torchaudio>=2.0.0",
    "transformers>=4.30.0",
    "numpy>=1.21.0",
    "scipy>=1.10.0",
    "librosa>=0.10.0",
    "sentence-transformers>=2.2.0",
    
    # Audio processing and speech
    "sounddevice>=0.4.6",
    "soundfile>=0.12.1",
    "pydub>=0.25.1",
    "speechrecognition>=3.10.0",
    "pyaudio>=0.2.11",
    "webrtcvad>=2.0.10",
    "pyaudio-fork>=0.2.11; platform_system == 'Linux' and platform_machine == 'aarch64'",
    
    # Enhanced VAD and audio processing
    "faster-whisper>=0.10.0",
    "pyannote.audio>=3.1.0",
    "pyannote.core>=5.0.0",
    "pyannote.database>=5.0.0",
    "pyannote.metrics>=3.2.0",
    "silero-vad>=4.0.0",
    
    # LLM integration
    "llama-cpp-python>=0.2.0",
    "huggingface-hub>=0.16.0",
    
    # TTS systems
    "pyttsx3>=2.90",
    "gTTS>=2.3.0",
    
    # Database
    "sqlalchemy>=2.0.0",
    
    # Utilities and system
    "requests>=2.31.0",
    "pyyaml>=6.0",
    "psutil>=5.9.0",
    "pillow>=10.0.0",
    "opencv-python>=4.8.0",
    "python-dotenv>=1.0.0",
    "tqdm>=4.64.0",
    
    # Audio format support
    "ffmpeg-python>=0.2.0",
    "mutagen>=1.47.0",
    
    # Platform-specific audio
    "ffmpeg-python>=0.2.0",
    "mutagen>=1.47.0",
]

[project.urls]
Homepage = "https://github.com/Erebus-Nyx/ai-companion"
Repository = "https://github.com/Erebus-Nyx/ai-companion"
Issues = "https://github.com/Erebus-Nyx/ai-companion/issues"
Documentation = "https://github.com/Erebus-Nyx/ai-companion/blob/main/README.md"

[project.scripts]
ai-companion = "cli:main"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.setuptools.package-data]
"*" = [
    "*.html", "*.css", "*.js", "*.json", "*.yaml", "*.yml", "*.md", "*.txt",
    "*.wasm", "*.map", "*.ts", "*.d.ts"
]
"web.static" = [
    "dist/**/*.js",
    "dist/**/*.wasm", 
    "dist/**/*.map",
    "dist/**/*.json",
    "dist/**/*.md",
    "dist/**/*.txt",
    "dist/CubismSdkForWeb-5-r.4/**/*",
    "js/**/*.js",
    "css/**/*.css",
    "**/*.html"
]

[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
